// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                Int       @id @default(autoincrement())
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
  walletAddress     String    @unique
  name              String
  email             String?
  twitterHandle     String?
  vote              vote[]
  comment           comment[]
  juriesAsPlantiff  jury[]    @relation("juriesAsPlantiff")
  juriesAsDefendant jury[]    @relation("juriesAsDefendant")
}

model jury {
  id                     Int      @id @default(autoincrement())
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  step                   Int      @default(1)
  plaintiffId            Int
  plaintiff              user     @relation("juriesAsPlantiff", fields: [plaintiffId], references: [id])
  plaintiffTitle         String
  plaintiffContent       String   @db.Text
  plaintiffReferenceLink Json?
  defendantId            Int?
  defendant              user?    @relation("juriesAsDefendant", fields: [defendantId], references: [id])
  defendantTitle         String?
  defendantContent       String?  @db.Text
  defendantReferenceLink Json?

  votes    vote[]
  comments comment[]
}

model vote {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  flag      Boolean
  juryId    Int
  jury      jury     @relation(fields: [juryId], references: [id])
  step      Int      @default(1)
  userId    Int
  user      user     @relation(fields: [userId], references: [id])

  @@unique([userId, juryId], name: "userId_juryId_unique_constraint")
}

model comment {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  juryId    Int
  jury      jury     @relation(fields: [juryId], references: [id])
  userId    Int
  user      user     @relation(fields: [userId], references: [id])
  content   String
}

model nonce {
  id      Int      @id @default(autoincrement())
  created DateTime @default(now()) @db.DateTime(6)
  updated DateTime @default(now()) @updatedAt @db.DateTime(6)
  address String
  value   String
  used    Boolean  @default(false)

  @@index([address])
}
